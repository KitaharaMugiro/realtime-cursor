import { useMutation } from '@apollo/client';
import type { NextPage, NextPageContext } from 'next';
import Head from 'next/head';
import React, { useEffect } from "react";
import queryRealtimeUserGql from '../api/gql/queryRealtimeUserGql';
import { useCreateRealtimeUser } from '../api/gqlFunctions/createRealtimeUser';
import { useQueryRealtimeUser } from "../api/gqlFunctions/listRealtimeUsers";
import { useOnCreateRealtimeGql } from '../api/gqlFunctions/useOnCreateRealtimeGql';
import MyApolloClient from "../api/MyApolloClient";
import ClientOnly from "../components/ClientOnly";
import Countries from "../components/countries";
import User from '../models/User';
import styles from '../styles/Home.module.css';

export async function getServerSideProps(context: any) { //typeないの？
    // URL情報は取れる
    const host = context.req.headers.host
    const path = context.resolvedUrl
    const url = host + path
    // UserIdは取れない。何か別の手段が必要
    const { data } = await MyApolloClient.query({
        query: queryRealtimeUserGql,
        variables: { url: "URL#" + url } //このロジックはどこかに埋めたいなあ
    });
    console.log(url)

    return {
        props: {
            realtimeUser: data.queryRealtimeUser.items,
            url: url
        },
    };

}


const Home: NextPage = (props: any) => {
    const { realtimeUser, url } = props
    const [createRealtimeUser, { loading, error }] = useCreateRealtimeUser()
    useEffect(() => {
        // TODO: こんなロジックをフロントでもたないといけないわけがない
        const user = new User()
        createRealtimeUser({ variables: { url: "URL#" + url, userId: "UserId#" + user.userId, name: user.name, avator: user.avator, updatedAt: user.updatedAt } })
    }, [])

    const { data } = useOnCreateRealtimeGql(url)
    if (data) {
        console.log("subscription value come!!!")
    }

    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
                <h1 className={styles.title}>
                    Welcome to <a href="https://nextjs.org">Next.js!</a>
                </h1>

                {data}

                <ClientOnly>
                    <Countries realtimeUser={realtimeUser} />
                </ClientOnly>
            </main>
        </div>
    )
}

export default Home
